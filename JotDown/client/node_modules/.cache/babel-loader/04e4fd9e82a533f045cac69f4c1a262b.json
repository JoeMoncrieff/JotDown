{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josep\\\\Documents\\\\PersonalProjects\\\\JotDown\\\\JotDown\\\\JotDown\\\\client\\\\src\\\\TextEditor.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"quill/dist/quill.snow.css\";\nimport Quill from \"quill\";\nimport { useEffect, useCallback, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { useParams, useLocation } from 'react-router-dom';\nimport JotterSidebar from './JotterSidebar'; // Setting up what we want on our toolbarOptions\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar toolbarOptions = [['bold', 'italic'], ['underline', 'strike'], // toggled buttons\n['blockquote', 'code-block'], [{\n  'list': 'ordered'\n}, {\n  'list': 'bullet'\n}], [{\n  'script': 'sub'\n}, {\n  'script': 'super'\n}], // superscript/subscript\n[{\n  'direction': 'rtl'\n}], // text direction\n[{\n  'header': [2, 3, 4, 5, 6, false]\n}, {\n  'font': []\n}], [{\n  'color': []\n}, {\n  'background': []\n}], // dropdown with defaults from theme\n[{\n  'align': []\n}, 'clean'] // remove formatting button\n];\nconst SAVE_INTERVAL_MS = 2000;\nexport default function TextEditor(props) {\n  _s();\n\n  const {\n    id: documentid\n  } = useParams();\n  const [socket, setSocket] = useState();\n  const [quill, setQuill] = useState();\n  const location = useLocation();\n  useEffect(() => {\n    console.log(\"location changed\");\n  }, [location]);\n  useEffect(() => {\n    const s = io(\"http://localhost:3001\");\n    setSocket(s);\n    return () => {\n      s.disconnect();\n    };\n  }, []); // This useEffect is for when we type something into the box this use useEffect\n  // listens for that and then sends that change to the server.\n\n  useEffect(() => {\n    //Making sure both our socket and quill are initialised before\n    //we run this\n    if (socket == null || quill == null) return; //Setting up a listener that detects changes from the server\n\n    const handler = function (delta, oldDelta, source) {\n      if (source !== 'user') return;\n      socket.emit(\"send-changes\", delta);\n    };\n\n    quill.on('text-change', handler); //Removing the function when we no longer need it.\n\n    return () => {\n      quill.off('text-change', handler);\n    };\n  }, [socket, quill]); //This useEffect is for receiving changes from the server to update our own document.\n\n  useEffect(() => {\n    //Making sure both our socket and quill are initialised before\n    //we run this\n    if (socket == null || quill == null) return; //handler function that receives a delta from the server then updates our\n    //quill\n\n    const handler = function (delta) {\n      quill.updateContents(delta);\n    };\n\n    socket.on('receive-changes', handler); //Removing the function when we no longer need it.\n\n    return () => {\n      quill.off('receive-changes', handler);\n    };\n  }, [socket, quill]);\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n    socket.once('load-document', document => {\n      quill.setContents(document);\n      quill.enable();\n    }, [socket, quill]);\n    socket.emit('get-document', documentid);\n  }, [socket, quill, documentid]);\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n    const interval = setInterval(() => {\n      socket.emit('save-document', quill.getContents());\n    }, SAVE_INTERVAL_MS);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [socket, quill]); // wrapperRef is a callback here so it is set before the return\n  // statement below is loaded\n\n  const wrapperRef = useCallback(wrapper => {\n    if (wrapper == null) return;\n    wrapper.innerHTML = ''; //creating div like this so that the quill toolbar is included\n    //in the divider\n\n    const editor = document.createElement('div');\n    wrapper.append(editor); //Runs on render. Sets up our tool bar and puts the text box\n    //in the container\n\n    const q = new Quill(editor, {\n      theme: \"snow\",\n      modules: {\n        toolbar: toolbarOptions\n      }\n    });\n    q.disable();\n    q.setText('Loading JotNote.......');\n    setQuill(q);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    ref: wrapperRef,\n    children: /*#__PURE__*/_jsxDEV(JotterSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 54\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 10\n  }, this);\n}\n\n_s(TextEditor, \"95cFKFQVa+OkZM6MJ7LFEFDL/9s=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c = TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"sources":["C:/Users/josep/Documents/PersonalProjects/JotDown/JotDown/JotDown/client/src/TextEditor.js"],"names":["React","Quill","useEffect","useCallback","useState","io","useParams","useLocation","JotterSidebar","toolbarOptions","SAVE_INTERVAL_MS","TextEditor","props","id","documentid","socket","setSocket","quill","setQuill","location","console","log","s","disconnect","handler","delta","oldDelta","source","emit","on","off","updateContents","once","document","setContents","enable","interval","setInterval","getContents","clearInterval","wrapperRef","wrapper","innerHTML","editor","createElement","append","q","theme","modules","toolbar","disable","setText"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,2BAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,WAAnB,EAAgCC,QAAhC,QAA+C,OAA/C;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,OAAOC,aAAP,MAA0B,iBAA1B,C,CAEA;;;AACA,IAAIC,cAAc,GAAG,CACrB,CAAC,MAAD,EAAS,QAAT,CADqB,EAErB,CAAC,WAAD,EAAc,QAAd,CAFqB,EAEU;AAC/B,CAAC,YAAD,EAAe,YAAf,CAHqB,EAIrB,CAAC;AAAE,UAAQ;AAAV,CAAD,EAAuB;AAAE,UAAQ;AAAV,CAAvB,CAJqB,EAKrB,CAAC;AAAE,YAAU;AAAZ,CAAD,EAAqB;AAAE,YAAU;AAAZ,CAArB,CALqB,EAK6B;AAClD,CAAC;AAAC,eAAa;AAAd,CAAD,CANqB,EAM2B;AAEhD,CAAC;AAAE,YAAU,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,KAAhB;AAAZ,CAAD,EAAsC;AAAE,UAAQ;AAAV,CAAtC,CARqB,EASrB,CAAC;AAAE,WAAS;AAAX,CAAD,EAAkB;AAAE,gBAAc;AAAhB,CAAlB,CATqB,EAS6B;AAClD,CAAC;AAAE,WAAS;AAAX,CAAD,EAAiB,OAAjB,CAVqB,CAUyC;AAVzC,CAArB;AAcA,MAAMC,gBAAgB,GAAG,IAAzB;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,QAAM;AAAEC,IAAAA,EAAE,EAAEC;AAAN,MAAqBR,SAAS,EAApC;AAEA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,EAApC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;AACA,QAAMe,QAAQ,GAAGZ,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,GAFQ,EAEP,CAACF,QAAD,CAFO,CAAT;AAKAjB,EAAAA,SAAS,CAAC,MACV;AACE,UAAMoB,CAAC,GAAGjB,EAAE,CAAC,uBAAD,CAAZ;AACAW,IAAAA,SAAS,CAACM,CAAD,CAAT;AAEA,WAAO,MAAM;AACXA,MAAAA,CAAC,CAACC,UAAF;AACD,KAFD;AAGD,GARQ,EAQP,EARO,CAAT,CAZwC,CAsBxC;AACA;;AACArB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA,QAAIa,MAAM,IAAI,IAAV,IAAkBE,KAAK,IAAI,IAA/B,EAAqC,OAHvB,CAKd;;AACA,UAAMO,OAAO,GAAG,UAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,EAAkC;AAC/C,UAAIA,MAAM,KAAK,MAAf,EAAuB;AAEvBZ,MAAAA,MAAM,CAACa,IAAP,CAAY,cAAZ,EAA4BH,KAA5B;AACC,KAJJ;;AAMAR,IAAAA,KAAK,CAACY,EAAN,CAAS,aAAT,EAAwBL,OAAxB,EAZc,CAcd;;AACA,WAAM,MAAM;AACVP,MAAAA,KAAK,CAACa,GAAN,CAAU,aAAV,EAAwBN,OAAxB;AACD,KAFD;AAID,GAnBQ,EAmBL,CAACT,MAAD,EAAQE,KAAR,CAnBK,CAAT,CAxBwC,CA6CxC;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA,QAAIa,MAAM,IAAI,IAAV,IAAkBE,KAAK,IAAI,IAA/B,EAAqC,OAHvB,CAKd;AACA;;AACA,UAAMO,OAAO,GAAG,UAASC,KAAT,EAChB;AACGR,MAAAA,KAAK,CAACc,cAAN,CAAqBN,KAArB;AACF,KAHD;;AAKAV,IAAAA,MAAM,CAACc,EAAP,CAAU,iBAAV,EAA6BL,OAA7B,EAZc,CAcd;;AACA,WAAM,MAAM;AACVP,MAAAA,KAAK,CAACa,GAAN,CAAU,iBAAV,EAA4BN,OAA5B;AACD,KAFD;AAID,GAnBQ,EAmBP,CAACT,MAAD,EAAQE,KAAR,CAnBO,CAAT;AAqBAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,MAAM,IAAI,IAAV,IAAkBE,KAAK,IAAI,IAA/B,EAAqC;AAErCF,IAAAA,MAAM,CAACiB,IAAP,CAAY,eAAZ,EAA6BC,QAAQ,IAAI;AACvChB,MAAAA,KAAK,CAACiB,WAAN,CAAkBD,QAAlB;AACAhB,MAAAA,KAAK,CAACkB,MAAN;AACD,KAHD,EAGG,CAACpB,MAAD,EAASE,KAAT,CAHH;AAKAF,IAAAA,MAAM,CAACa,IAAP,CAAY,cAAZ,EAA4Bd,UAA5B;AACD,GATQ,EASN,CAACC,MAAD,EAAQE,KAAR,EAAcH,UAAd,CATM,CAAT;AAWAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,MAAM,IAAI,IAAV,IAAkBE,KAAK,IAAI,IAA/B,EAAqC;AAErC,UAAMmB,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCtB,MAAAA,MAAM,CAACa,IAAP,CAAY,eAAZ,EAA4BX,KAAK,CAACqB,WAAN,EAA5B;AACD,KAF2B,EAEzB5B,gBAFyB,CAA5B;AAIA,WAAO,MAAM;AACX6B,MAAAA,aAAa,CAACH,QAAD,CAAb;AACD,KAFD;AAGD,GAVQ,EAUN,CAACrB,MAAD,EAAQE,KAAR,CAVM,CAAT,CA9EwC,CA0FxC;AACA;;AACA,QAAMuB,UAAU,GAAGrC,WAAW,CAACsC,OAAO,IACtC;AACE,QAAIA,OAAO,IAAI,IAAf,EAAqB;AACrBA,IAAAA,OAAO,CAACC,SAAR,GAAoB,EAApB,CAFF,CAGE;AACA;;AACA,UAAMC,MAAM,GAAGV,QAAQ,CAACW,aAAT,CAAuB,KAAvB,CAAf;AACAH,IAAAA,OAAO,CAACI,MAAR,CAAeF,MAAf,EANF,CAQE;AACA;;AACA,UAAMG,CAAC,GAAG,IAAI7C,KAAJ,CAAU0C,MAAV,EAAiB;AAACI,MAAAA,KAAK,EAAC,MAAP;AAAcC,MAAAA,OAAO,EAAC;AAACC,QAAAA,OAAO,EAACxC;AAAT;AAAtB,KAAjB,CAAV;AACAqC,IAAAA,CAAC,CAACI,OAAF;AACAJ,IAAAA,CAAC,CAACK,OAAF,CAAU,wBAAV;AACAjC,IAAAA,QAAQ,CAAC4B,CAAD,CAAR;AACD,GAf6B,EAe5B,EAf4B,CAA9B;AAgBA,sBAAO;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEN,UAAhC;AAAA,2BAA4C,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAA5C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA7GuB7B,U;UACKL,S,EAIVC,W;;;KALKI,U","sourcesContent":["import React from 'react'\r\nimport \"quill/dist/quill.snow.css\"\r\nimport Quill from \"quill\"\r\nimport {useEffect, useCallback, useState} from \"react\"\r\nimport { io } from \"socket.io-client\"\r\nimport { useParams, useLocation } from 'react-router-dom'\r\nimport JotterSidebar from './JotterSidebar'\r\n\r\n// Setting up what we want on our toolbarOptions\r\nvar toolbarOptions = [\r\n['bold', 'italic'],\r\n['underline', 'strike'],       // toggled buttons\r\n['blockquote', 'code-block'],\r\n[{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n[{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\r\n[{'direction': 'rtl'}],                         // text direction\r\n\r\n[{ 'header': [2, 3, 4, 5, 6, false] },{ 'font': [] }],\r\n[{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n[{ 'align': [] },'clean']                                     // remove formatting button\r\n];\r\n\r\n\r\nconst SAVE_INTERVAL_MS = 2000\r\n\r\nexport default function TextEditor(props) {\r\n  const { id: documentid } = useParams()\r\n\r\n  const [socket, setSocket] = useState()\r\n  const [quill, setQuill] = useState()\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    console.log(\"location changed\")\r\n  },[location])\r\n\r\n\r\n  useEffect(() =>\r\n  {\r\n    const s = io(\"http://localhost:3001\")\r\n    setSocket(s)\r\n\r\n    return () => {\r\n      s.disconnect()\r\n    }\r\n  },[])\r\n\r\n  // This useEffect is for when we type something into the box this use useEffect\r\n  // listens for that and then sends that change to the server.\r\n  useEffect(() => {\r\n    //Making sure both our socket and quill are initialised before\r\n    //we run this\r\n    if (socket == null || quill == null) return\r\n\r\n    //Setting up a listener that detects changes from the server\r\n    const handler = function(delta, oldDelta, source) {\r\n       if (source !== 'user') return\r\n\r\n       socket.emit(\"send-changes\", delta)\r\n       }\r\n\r\n    quill.on('text-change', handler)\r\n\r\n    //Removing the function when we no longer need it.\r\n    return() => {\r\n      quill.off('text-change',handler)\r\n    }\r\n\r\n  } , [socket,quill])\r\n\r\n  //This useEffect is for receiving changes from the server to update our own document.\r\n  useEffect(() => {\r\n    //Making sure both our socket and quill are initialised before\r\n    //we run this\r\n    if (socket == null || quill == null) return\r\n\r\n    //handler function that receives a delta from the server then updates our\r\n    //quill\r\n    const handler = function(delta)\r\n    {\r\n       quill.updateContents(delta)\r\n    }\r\n\r\n    socket.on('receive-changes', handler)\r\n\r\n    //Removing the function when we no longer need it.\r\n    return() => {\r\n      quill.off('receive-changes',handler)\r\n    }\r\n\r\n  },[socket,quill])\r\n\r\n  useEffect(() => {\r\n    if (socket == null || quill == null) return\r\n\r\n    socket.once('load-document', document => {\r\n      quill.setContents(document)\r\n      quill.enable()\r\n    }, [socket, quill])\r\n\r\n    socket.emit('get-document', documentid)\r\n  }, [socket,quill,documentid])\r\n\r\n  useEffect(() => {\r\n    if (socket == null || quill == null) return\r\n\r\n    const interval = setInterval(() => {\r\n      socket.emit('save-document',quill.getContents())\r\n    }, SAVE_INTERVAL_MS)\r\n\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [socket,quill])\r\n\r\n  // wrapperRef is a callback here so it is set before the return\r\n  // statement below is loaded\r\n  const wrapperRef = useCallback(wrapper =>\r\n  {\r\n    if (wrapper == null) return\r\n    wrapper.innerHTML = ''\r\n    //creating div like this so that the quill toolbar is included\r\n    //in the divider\r\n    const editor = document.createElement('div');\r\n    wrapper.append(editor);\r\n\r\n    //Runs on render. Sets up our tool bar and puts the text box\r\n    //in the container\r\n    const q = new Quill(editor,{theme:\"snow\",modules:{toolbar:toolbarOptions}})\r\n    q.disable()\r\n    q.setText('Loading JotNote.......')\r\n    setQuill(q)\r\n  },[])\r\n  return <div className=\"container\" ref={wrapperRef}><JotterSidebar/></div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}